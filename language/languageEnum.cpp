#include "languageEnum.h"
struct QMap<QString,langEnum> langMap;
void langMap_Init(){
	langMap.insert("strTmpAvg",langEnum::strTmpAvg);
	langMap.insert("strTmpMax",langEnum::strTmpMax);
	langMap.insert("strVolt",langEnum::strVolt);
	langMap.insert("strCurr",langEnum::strCurr);
	langMap.insert("strFreq",langEnum::strFreq);
	langMap.insert("strPF",langEnum::strPF);
	langMap.insert("strLoad",langEnum::strLoad);
	langMap.insert("strKva",langEnum::strKva);
	langMap.insert("strKw",langEnum::strKw);
	langMap.insert("strLoadPer",langEnum::strLoadPer);
	langMap.insert("strSU",langEnum::strSU);
	langMap.insert("strSD",langEnum::strSD);
	langMap.insert("strCoolingMode",langEnum::strCoolingMode);
	langMap.insert("strReturnAirMode",langEnum::strReturnAirMode);
	langMap.insert("strKwh",langEnum::strKwh);
	langMap.insert("strCurrHgrUpLimit",langEnum::strCurrHgrUpLimit);
	langMap.insert("strCurrLwrLwLimit",langEnum::strCurrLwrLwLimit);
	langMap.insert("strVoltTHD",langEnum::strVoltTHD);
	langMap.insert("strCurrTHD",langEnum::strCurrTHD);
	langMap.insert("strPHVolt",langEnum::strPHVolt);
	langMap.insert("strPHCurr",langEnum::strPHCurr);
	langMap.insert("strPHVoltTHD",langEnum::strPHVoltTHD);
	langMap.insert("strPHCurrTHD",langEnum::strPHCurrTHD);
	langMap.insert("strZeroClr",langEnum::strZeroClr);
	langMap.insert("strKvar",langEnum::strKvar);
	langMap.insert("strTtlKwh",langEnum::strTtlKwh);
	langMap.insert("strNCurr",langEnum::strNCurr);
	langMap.insert("strLnVolt",langEnum::strLnVolt);
	langMap.insert("strEnable",langEnum::strEnable);
	langMap.insert("strClose",langEnum::strClose);
	langMap.insert("strStart",langEnum::strStart);
	langMap.insert("strManuCtrl",langEnum::strManuCtrl);
	langMap.insert("strReset",langEnum::strReset);
	langMap.insert("strBan",langEnum::strBan);
	langMap.insert("strNPEVolt",langEnum::strNPEVolt);
	langMap.insert("strSpdsMain",langEnum::strSpdsMain);
	langMap.insert("strSpdsBranch",langEnum::strSpdsBranch);
	langMap.insert("strSwitchSts",langEnum::strSwitchSts);
	langMap.insert("strAutoCtrl",langEnum::strAutoCtrl);
	langMap.insert("strRunStatus",langEnum::strRunStatus);
	langMap.insert("strRunPara",langEnum::strRunPara);
	langMap.insert("strPara",langEnum::strPara);
	langMap.insert("strSettings",langEnum::strSettings);
	langMap.insert("strInputData",langEnum::strInputData);
	langMap.insert("strOutputData",langEnum::strOutputData);
	langMap.insert("strBattData",langEnum::strBattData);
	langMap.insert("strUPSInfo",langEnum::strUPSInfo);
	langMap.insert("strAlarmMute",langEnum::strAlarmMute);
	langMap.insert("strEscAlarmMute",langEnum::strEscAlarmMute);
	langMap.insert("strSwitchByp",langEnum::strSwitchByp);
	langMap.insert("strEscSwitchByp",langEnum::strEscSwitchByp);
	langMap.insert("strUpsBattTest",langEnum::strUpsBattTest);
	langMap.insert("strBattMaintenance",langEnum::strBattMaintenance);
	langMap.insert("strUpsStopTest",langEnum::strUpsStopTest);
	langMap.insert("strMeterPara",langEnum::strMeterPara);
	langMap.insert("strStatus",langEnum::strStatus);
	langMap.insert("strAcStsIntegratedAlm",langEnum::strAcStsIntegratedAlm);
	langMap.insert("strAcParaRunSts",langEnum::strAcParaRunSts);
	langMap.insert("strAcStsCoolingSts",langEnum::strAcStsCoolingSts);
	langMap.insert("strAcStsDehumiSts",langEnum::strAcStsDehumiSts);
	langMap.insert("strAcStsMtrShutdown",langEnum::strAcStsMtrShutdown);
	langMap.insert("strAcStsHeatSts",langEnum::strAcStsHeatSts);
	langMap.insert("strAcStsHumiSts",langEnum::strAcStsHumiSts);
	langMap.insert("strAcParaOutletTemp",langEnum::strAcParaOutletTemp);
	langMap.insert("strAcParaInletTemp",langEnum::strAcParaInletTemp);
	langMap.insert("strAcParaCntlWays",langEnum::strAcParaCntlWays);
	langMap.insert("strAcParaAmbientTemp",langEnum::strAcParaAmbientTemp);
	langMap.insert("strAcParaInnerFanRunTime",langEnum::strAcParaInnerFanRunTime);
	langMap.insert("strAcParaOuterFanRunTime",langEnum::strAcParaOuterFanRunTime);
	langMap.insert("strAcParaCompressorRunTime",langEnum::strAcParaCompressorRunTime);
	langMap.insert("strAcParaOutletHumi",langEnum::strAcParaOutletHumi);
	langMap.insert("strAcParaInletHumi",langEnum::strAcParaInletHumi);
	langMap.insert("strAcParaHeaterRunTime",langEnum::strAcParaHeaterRunTime);
	langMap.insert("strAcParaHumiRunTime",langEnum::strAcParaHumiRunTime);
	langMap.insert("strAcParaPowerFreq",langEnum::strAcParaPowerFreq);
	langMap.insert("strAcParaCoolCapacity",langEnum::strAcParaCoolCapacity);
	langMap.insert("strAcParaAmbientHumi",langEnum::strAcParaAmbientHumi);
	langMap.insert("strAcParaInnerFanSpeed",langEnum::strAcParaInnerFanSpeed);
	langMap.insert("strAcParaOuterFanSpeed",langEnum::strAcParaOuterFanSpeed);
	langMap.insert("strAcParaCompressorSpeed",langEnum::strAcParaCompressorSpeed);
	langMap.insert("strAcParaSysTotalRunTime",langEnum::strAcParaSysTotalRunTime);
	langMap.insert("strAcParaCoolingSetTemp",langEnum::strAcParaCoolingSetTemp);
	langMap.insert("strAcParaCoolingRange",langEnum::strAcParaCoolingRange);
	langMap.insert("strAcParaHumiSetVal",langEnum::strAcParaHumiSetVal);
	langMap.insert("strAcParaHumiRange",langEnum::strAcParaHumiRange);
	langMap.insert("strAcParaHighTempAlmVal",langEnum::strAcParaHighTempAlmVal);
	langMap.insert("strAcParaLowTempAlmVal",langEnum::strAcParaLowTempAlmVal);
	langMap.insert("strAcParaHiHumiAlmVal",langEnum::strAcParaHiHumiAlmVal);
	langMap.insert("strAcParaLowHumiAlmVal",langEnum::strAcParaLowHumiAlmVal);
	langMap.insert("strAcParaHeaterSet",langEnum::strAcParaHeaterSet);
	langMap.insert("strAcParaHeatRange",langEnum::strAcParaHeatRange);
	langMap.insert("strUpsStsGeneralAlm",langEnum::strUpsStsGeneralAlm);
	langMap.insert("strUpsStsLoadOnSrc",langEnum::strUpsStsLoadOnSrc);
	langMap.insert("strUpsStsBattSts",langEnum::strUpsStsBattSts);
	langMap.insert("strUpsStsBattTestResult",langEnum::strUpsStsBattTestResult);
	langMap.insert("strUpsStsBattMaintResult",langEnum::strUpsStsBattMaintResult);
	langMap.insert("strUpsStsManualTxByp",langEnum::strUpsStsManualTxByp);
	langMap.insert("strUpsStsEpo",langEnum::strUpsStsEpo);
	langMap.insert("strUpsStsFanFail",langEnum::strUpsStsFanFail);
	langMap.insert("strUpsStsTmpFail",langEnum::strUpsStsTmpFail);
	langMap.insert("strUpsStsRecFail",langEnum::strUpsStsRecFail);
	langMap.insert("strUpsStsIpFail",langEnum::strUpsStsIpFail);
	langMap.insert("strUpsStsBypFail",langEnum::strUpsStsBypFail);
	langMap.insert("strUpsStsBypVoltFail",langEnum::strUpsStsBypVoltFail);
	langMap.insert("strUpsStsBypUntrack",langEnum::strUpsStsBypUntrack);
	langMap.insert("strUpsStsBypOvLd",langEnum::strUpsStsBypOvLd);
	langMap.insert("strUpsStsBypSeqFail",langEnum::strUpsStsBypSeqFail);
	langMap.insert("strUpsStsMaintCb",langEnum::strUpsStsMaintCb);
	langMap.insert("strUpsStsInvFail",langEnum::strUpsStsInvFail);
	langMap.insert("strUpsStsInvOvLd",langEnum::strUpsStsInvOvLd);
	langMap.insert("strUpsStsOpShorted",langEnum::strUpsStsOpShorted);
	langMap.insert("strUpsStsBattVoltLow",langEnum::strUpsStsBattVoltLow);
	langMap.insert("strUpsStsEod",langEnum::strUpsStsEod);
	langMap.insert("strUpsStsBattReverse",langEnum::strUpsStsBattReverse);
	langMap.insert("strUpsStsOnUpsInhibited",langEnum::strUpsStsOnUpsInhibited);
	langMap.insert("strUpsStsRecSts",langEnum::strUpsStsRecSts);
	langMap.insert("strUpsParaBypVoltPh",langEnum::strUpsParaBypVoltPh);
	langMap.insert("strUpsParaBypCurrPh",langEnum::strUpsParaBypCurrPh);
	langMap.insert("strUpsParaBypFreqPh",langEnum::strUpsParaBypFreqPh);
	langMap.insert("strUpsParaBypPfPh",langEnum::strUpsParaBypPfPh);
	langMap.insert("strUpsParaIpVoltPh",langEnum::strUpsParaIpVoltPh);
	langMap.insert("strUpsParaIpCurrPh",langEnum::strUpsParaIpCurrPh);
	langMap.insert("strUpsParaIpFreqPh",langEnum::strUpsParaIpFreqPh);
	langMap.insert("strUpsParaIpPfPh",langEnum::strUpsParaIpPfPh);
	langMap.insert("strUpsParaOpVoltPh",langEnum::strUpsParaOpVoltPh);
	langMap.insert("strUpsParaOpCurrPh",langEnum::strUpsParaOpCurrPh);
	langMap.insert("strUpsParaOpFreqPh",langEnum::strUpsParaOpFreqPh);
	langMap.insert("strUpsParaOpPfPh",langEnum::strUpsParaOpPfPh);
	langMap.insert("strUpsParaOpKvaPh",langEnum::strUpsParaOpKvaPh);
	langMap.insert("strUpsParaOpKwPh",langEnum::strUpsParaOpKwPh);
	langMap.insert("strUpsParaBattVoltPos",langEnum::strUpsParaBattVoltPos);
	langMap.insert("strUpsParaBattVoltNeg",langEnum::strUpsParaBattVoltNeg);
	langMap.insert("strUpsParaBattCurrPos",langEnum::strUpsParaBattCurrPos);
	langMap.insert("strUpsParaBattCurrNeg",langEnum::strUpsParaBattCurrNeg);
	langMap.insert("strUpsParaBattTemp",langEnum::strUpsParaBattTemp);
	langMap.insert("strUpsParaBattRemdTime",langEnum::strUpsParaBattRemdTime);
	langMap.insert("strUpsParaBattCapa",langEnum::strUpsParaBattCapa);
	langMap.insert("strUpsCfgBattNum",langEnum::strUpsCfgBattNum);
	langMap.insert("strUpsCfgBattAH",langEnum::strUpsCfgBattAH);
	langMap.insert("strUpsCfgCabPower",langEnum::strUpsCfgCabPower);
	langMap.insert("strUpsCfgIpVolt",langEnum::strUpsCfgIpVolt);
	langMap.insert("strUpsCfgIpHz",langEnum::strUpsCfgIpHz);
	langMap.insert("strUpsCfgOpVolt",langEnum::strUpsCfgOpVolt);
	langMap.insert("strUpsCfgOpHz",langEnum::strUpsCfgOpHz);
	langMap.insert("strmanufacturer0",langEnum::strmanufacturer0);
	langMap.insert("strMtrVer0",langEnum::strMtrVer0);
	langMap.insert("strseries0",langEnum::strseries0);
	langMap.insert("strmodelName0",langEnum::strmodelName0);
	langMap.insert("strUpsParaLdPerPh",langEnum::strUpsParaLdPerPh);
	langMap.insert("strUpsParaEnvirTemp",langEnum::strUpsParaEnvirTemp);
	langMap.insert("strUpsParaBypFanRunTime",langEnum::strUpsParaBypFanRunTime);
	langMap.insert("strUpsCtlMute",langEnum::strUpsCtlMute);
	langMap.insert("strUpsCtlManTxByp",langEnum::strUpsCtlManTxByp);
	langMap.insert("strUpsCtlBattCmd",langEnum::strUpsCtlBattCmd);
	langMap.insert("strMeterParaCurrA",langEnum::strMeterParaCurrA);
	langMap.insert("strMeterParaCurrB",langEnum::strMeterParaCurrB);
	langMap.insert("strMeterParaCurrC",langEnum::strMeterParaCurrC);
	langMap.insert("strMeterParaCurrN",langEnum::strMeterParaCurrN);
	langMap.insert("strMeterParaMaxCurrA",langEnum::strMeterParaMaxCurrA);
	langMap.insert("strMeterParaMaxCurrB",langEnum::strMeterParaMaxCurrB);
	langMap.insert("strMeterParaMaxCurrC",langEnum::strMeterParaMaxCurrC);
	langMap.insert("strMeterParaMaxCurrN",langEnum::strMeterParaMaxCurrN);
	langMap.insert("strMeterParaVoltAB",langEnum::strMeterParaVoltAB);
	langMap.insert("strMeterParaVoltBC",langEnum::strMeterParaVoltBC);
	langMap.insert("strMeterParaVoltCA",langEnum::strMeterParaVoltCA);
	langMap.insert("strMeterParaVoltA",langEnum::strMeterParaVoltA);
	langMap.insert("strMeterParaVoltB",langEnum::strMeterParaVoltB);
	langMap.insert("strMeterParaVoltC",langEnum::strMeterParaVoltC);
	langMap.insert("strMeterParaFreq",langEnum::strMeterParaFreq);
	langMap.insert("strMeterParaKwAll",langEnum::strMeterParaKwAll);
	langMap.insert("strMeterParaMaxKwAll",langEnum::strMeterParaMaxKwAll);
	langMap.insert("strMeterParaKwA",langEnum::strMeterParaKwA);
	langMap.insert("strMeterParaKwB",langEnum::strMeterParaKwB);
	langMap.insert("strMeterParaKwC",langEnum::strMeterParaKwC);
	langMap.insert("strMeterParaKVarAll",langEnum::strMeterParaKVarAll);
	langMap.insert("strMeterParaMaxKVarA",langEnum::strMeterParaMaxKVarA);
	langMap.insert("strMeterParaKVarA",langEnum::strMeterParaKVarA);
	langMap.insert("strMeterParaKVarB",langEnum::strMeterParaKVarB);
	langMap.insert("strMeterParaKVarC",langEnum::strMeterParaKVarC);
	langMap.insert("strMeterParaKVAAll",langEnum::strMeterParaKVAAll);
	langMap.insert("strMeterParaMaxKVAAl",langEnum::strMeterParaMaxKVAAl);
	langMap.insert("strMeterParaKvaA",langEnum::strMeterParaKvaA);
	langMap.insert("strMeterParaKvaB",langEnum::strMeterParaKvaB);
	langMap.insert("strMeterParaKvaC",langEnum::strMeterParaKvaC);
	langMap.insert("strMeterParaPfAll",langEnum::strMeterParaPfAll);
	langMap.insert("strMeterParaPfA",langEnum::strMeterParaPfA);
	langMap.insert("strMeterParaPfB",langEnum::strMeterParaPfB);
	langMap.insert("strMeterParaPfC",langEnum::strMeterParaPfC);
	langMap.insert("strSpdsParaKWH",langEnum::strSpdsParaKWH);
	langMap.insert("strMeterParaKWH",langEnum::strMeterParaKWH);
	langMap.insert("strMeterParaKVarH",langEnum::strMeterParaKVarH);
	langMap.insert("strMeterParaVoltABThd",langEnum::strMeterParaVoltABThd);
	langMap.insert("strMeterParaVoltBCThd",langEnum::strMeterParaVoltBCThd);
	langMap.insert("strMeterParaVoltCAThd",langEnum::strMeterParaVoltCAThd);
	langMap.insert("strMeterParaVoltAThd",langEnum::strMeterParaVoltAThd);
	langMap.insert("strMeterParaVoltBThd",langEnum::strMeterParaVoltBThd);
	langMap.insert("strMeterParaVoltCThd",langEnum::strMeterParaVoltCThd);
	langMap.insert("strMeterParaCurrAThd",langEnum::strMeterParaCurrAThd);
	langMap.insert("strMeterParaCurrBThd",langEnum::strMeterParaCurrBThd);
	langMap.insert("strMeterParaCurrCThd",langEnum::strMeterParaCurrCThd);
	langMap.insert("strMeterParaCurrNThd",langEnum::strMeterParaCurrNThd);
	langMap.insert("strThsParaTmp",langEnum::strThsParaTmp);
	langMap.insert("strThsParaHum",langEnum::strThsParaHum);
	langMap.insert("strThsParaAlmSts",langEnum::strThsParaAlmSts);
	langMap.insert("strThsParaTmpAlmDiff",langEnum::strThsParaTmpAlmDiff);
	langMap.insert("strThsParaHumAlmDiff",langEnum::strThsParaHumAlmDiff);
	langMap.insert("strThsParaTmpUpper",langEnum::strThsParaTmpUpper);
	langMap.insert("strThsParaTmpLower",langEnum::strThsParaTmpLower);
	langMap.insert("strThsParaHumUpper",langEnum::strThsParaHumUpper);
	langMap.insert("strThsParaHumLower",langEnum::strThsParaHumLower);
	langMap.insert("strLeakParaLeakPos",langEnum::strLeakParaLeakPos);
	langMap.insert("strLeakParaAlmSts",langEnum::strLeakParaAlmSts);
	langMap.insert("strLeakParaCableResist",langEnum::strLeakParaCableResist);
	langMap.insert("strLeakParaAlmLevel",langEnum::strLeakParaAlmLevel);
	langMap.insert("strLevel1",langEnum::strLevel1);
	langMap.insert("strLevel2",langEnum::strLevel2);
	langMap.insert("strLevel3",langEnum::strLevel3);
	langMap.insert("strLevel4",langEnum::strLevel4);
	langMap.insert("strLevel5",langEnum::strLevel5);
	langMap.insert("strDeviceNumber",langEnum::strDeviceNumber);
	langMap.insert("strSensorStatus",langEnum::strSensorStatus);
	langMap.insert("str2400",langEnum::str2400);
	langMap.insert("str4800",langEnum::str4800);
	langMap.insert("str9600",langEnum::str9600);
	langMap.insert("str19200",langEnum::str19200);
	langMap.insert("strR410A",langEnum::strR410A);
	langMap.insert("strIR_IT1_x10",langEnum::strIR_IT1_x10);
	langMap.insert("strIR_IT2_x10",langEnum::strIR_IT2_x10);
	langMap.insert("strIR_IH_x10",langEnum::strIR_IH_x10);
	langMap.insert("strIR_OT1_x10",langEnum::strIR_OT1_x10);
	langMap.insert("strIR_OT2_x10",langEnum::strIR_OT2_x10);
	langMap.insert("strIR_OT3_x10",langEnum::strIR_OT3_x10);
	langMap.insert("strIR_OH_x10",langEnum::strIR_OH_x10);
	langMap.insert("strIR_EXSU_T_x10",langEnum::strIR_EXSU_T_x10);
	langMap.insert("strIR_SUCT_T_x10",langEnum::strIR_SUCT_T_x10);
	langMap.insert("strIR_EVAP_T_x10",langEnum::strIR_EVAP_T_x10);
	langMap.insert("strIR_SUCT_P_x10",langEnum::strIR_SUCT_P_x10);
	langMap.insert("strIR_EXSU_P_x10",langEnum::strIR_EXSU_P_x10);
	langMap.insert("strIR_SYSA_COND_T_x10",langEnum::strIR_SYSA_COND_T_x10);
	langMap.insert("strIR_SYSB_COND_T_x10",langEnum::strIR_SYSB_COND_T_x10);
	langMap.insert("strIR_SYSA_SUCT_SHT_x10",langEnum::strIR_SYSA_SUCT_SHT_x10);
	langMap.insert("strIR_SYSB_SUCT_SHT_x10",langEnum::strIR_SYSB_SUCT_SHT_x10);
	langMap.insert("strIR_SYS_LEWY_x10",langEnum::strIR_SYS_LEWY_x10);
	langMap.insert("strIR_NET_AT_x10",langEnum::strIR_NET_AT_x10);
	langMap.insert("strRemoteTemHum",langEnum::strRemoteTemHum);
	langMap.insert("strIR_RT01",langEnum::strIR_RT01);
	langMap.insert("strIR_RH01",langEnum::strIR_RH01);
	langMap.insert("strIR_RT02",langEnum::strIR_RT02);
	langMap.insert("strIR_RH02",langEnum::strIR_RH02);
	langMap.insert("strIR_RT03",langEnum::strIR_RT03);
	langMap.insert("strIR_RH03",langEnum::strIR_RH03);
	langMap.insert("strIR_RT04",langEnum::strIR_RT04);
	langMap.insert("strIR_RH04",langEnum::strIR_RH04);
	langMap.insert("strIR_RT05",langEnum::strIR_RT05);
	langMap.insert("strIR_RH05",langEnum::strIR_RH05);
	langMap.insert("strIR_RT06",langEnum::strIR_RT06);
	langMap.insert("strIR_RH06",langEnum::strIR_RH06);
	langMap.insert("strIR_RT07",langEnum::strIR_RT07);
	langMap.insert("strIR_RH07",langEnum::strIR_RH07);
	langMap.insert("strIR_RT08",langEnum::strIR_RT08);
	langMap.insert("strIR_RH08",langEnum::strIR_RH08);
	langMap.insert("strIR_RT09",langEnum::strIR_RT09);
	langMap.insert("strIR_RH09",langEnum::strIR_RH09);
	langMap.insert("strIR_RT10",langEnum::strIR_RT10);
	langMap.insert("strIR_RH10",langEnum::strIR_RH10);
	langMap.insert("strIR_RT11",langEnum::strIR_RT11);
	langMap.insert("strIR_RH11",langEnum::strIR_RH11);
	langMap.insert("strIR_RT12",langEnum::strIR_RT12);
	langMap.insert("strIR_RH12",langEnum::strIR_RH12);
	langMap.insert("strIR_RT13",langEnum::strIR_RT13);
	langMap.insert("strIR_RH13",langEnum::strIR_RH13);
	langMap.insert("strIR_RT14",langEnum::strIR_RT14);
	langMap.insert("strIR_RH14",langEnum::strIR_RH14);
	langMap.insert("strIR_RT15",langEnum::strIR_RT15);
	langMap.insert("strIR_RH15",langEnum::strIR_RH15);
	langMap.insert("strIR_RT16",langEnum::strIR_RT16);
	langMap.insert("strIR_RH16",langEnum::strIR_RH16);
	langMap.insert("strIR_NET_AH_x10",langEnum::strIR_NET_AH_x10);
	langMap.insert("strDeviceStatus",langEnum::strDeviceStatus);
	langMap.insert("strIR_SYS_TYPE",langEnum::strIR_SYS_TYPE);
	langMap.insert("strIS_ONOFF_STS",langEnum::strIS_ONOFF_STS);
	langMap.insert("strIR_SYS_RUN_STS",langEnum::strIR_SYS_RUN_STS);
	langMap.insert("strIR_SYS_RUN_MOD",langEnum::strIR_SYS_RUN_MOD);
	langMap.insert("strIS_EFAN_STS",langEnum::strIS_EFAN_STS);
	langMap.insert("strIS_CFAN_STS",langEnum::strIS_CFAN_STS);
	langMap.insert("strIS_CMPR_STS",langEnum::strIS_CMPR_STS);
	langMap.insert("strIS_HUMI_STS",langEnum::strIS_HUMI_STS);
	langMap.insert("strIS_CMPR_HT_STS",langEnum::strIS_CMPR_HT_STS);
	langMap.insert("strIS_LL_SV_STS",langEnum::strIS_LL_SV_STS);
	langMap.insert("strIS_CPUMP_STS",langEnum::strIS_CPUMP_STS);
	langMap.insert("strIS_HEAT_STS",langEnum::strIS_HEAT_STS);
	langMap.insert("strIS_EH_IW_STS",langEnum::strIS_EH_IW_STS);
	langMap.insert("strIS_EH_OW_STS",langEnum::strIS_EH_OW_STS);
	langMap.insert("strIS_HPUMP_STS",langEnum::strIS_HPUMP_STS);
	langMap.insert("strIS_WFH_IWSV_STS",langEnum::strIS_WFH_IWSV_STS);
	langMap.insert("strIR_SYS_CLCN",langEnum::strIR_SYS_CLCN);
	langMap.insert("strIR_SYS_HTCN",langEnum::strIR_SYS_HTCN);
	langMap.insert("strIR_SYS_IHCN",langEnum::strIR_SYS_IHCN);
	langMap.insert("strIR_SYS_DHCN",langEnum::strIR_SYS_DHCN);
	langMap.insert("strIR_T_x10",langEnum::strIR_T_x10);
	langMap.insert("strIR_H_x10",langEnum::strIR_H_x10);
	langMap.insert("strIR_TS_x10",langEnum::strIR_TS_x10);
	langMap.insert("strIR_HS_x10",langEnum::strIR_HS_x10);
	langMap.insert("strIR_CTL_WAYS",langEnum::strIR_CTL_WAYS);
	langMap.insert("strIR_IT_x10",langEnum::strIR_IT_x10);
	langMap.insert("strDI_input",langEnum::strDI_input);
	langMap.insert("strIS_DI_EFAN_OL_1",langEnum::strIS_DI_EFAN_OL_1);
	langMap.insert("strIS_DI_EFAN_OL_2",langEnum::strIS_DI_EFAN_OL_2);
	langMap.insert("strIS_DI_EFAN_OL_3",langEnum::strIS_DI_EFAN_OL_3);
	langMap.insert("strIS_DI_HP_ONOFF",langEnum::strIS_DI_HP_ONOFF);
	langMap.insert("strIS_DI_LP_ONOFF",langEnum::strIS_DI_LP_ONOFF);
	langMap.insert("strIS_DI_WFH_LWL",langEnum::strIS_DI_WFH_LWL);
	langMap.insert("strIS_DI_CL_HWL",langEnum::strIS_DI_CL_HWL);
	langMap.insert("strIS_DI_HEAT_OL",langEnum::strIS_DI_HEAT_OL);
	langMap.insert("strIS_DI_CFAN_ALM",langEnum::strIS_DI_CFAN_ALM);
	langMap.insert("strIS_DI_AF_LS",langEnum::strIS_DI_AF_LS);
	langMap.insert("strIS_DI_FLT_BLK",langEnum::strIS_DI_FLT_BLK);
	langMap.insert("strIS_DI_SMK_ALM",langEnum::strIS_DI_SMK_ALM);
	langMap.insert("strIS_DI_ONOFF",langEnum::strIS_DI_ONOFF);
	langMap.insert("strComprPara",langEnum::strComprPara);
	langMap.insert("strIR_CMPR_F_x10",langEnum::strIR_CMPR_F_x10);
	langMap.insert("strIR_CMPR_SET_F_x10",langEnum::strIR_CMPR_SET_F_x10);
	langMap.insert("strIR_INV_DC_VOLT_x10",langEnum::strIR_INV_DC_VOLT_x10);
	langMap.insert("strIR_INV_OUT_VOLT_x10",langEnum::strIR_INV_OUT_VOLT_x10);
	langMap.insert("strIR_INV_OUT_CURR_x10",langEnum::strIR_INV_OUT_CURR_x10);
	langMap.insert("strIR_INV_TEMP_x10",langEnum::strIR_INV_TEMP_x10);
	langMap.insert("strIR_INV_VER",langEnum::strIR_INV_VER);
	langMap.insert("strIR_CMPRA_CTL_F",langEnum::strIR_CMPRA_CTL_F);
	langMap.insert("strIR_CMPRB_CTL_F",langEnum::strIR_CMPRB_CTL_F);
	langMap.insert("strIR_SYS_CCP",langEnum::strIR_SYS_CCP);
	langMap.insert("strHum",langEnum::strHum);
	langMap.insert("strIR_ETH_I_x10",langEnum::strIR_ETH_I_x10);
	langMap.insert("strIR_ETH_HWL_V",langEnum::strIR_ETH_HWL_V);
	langMap.insert("strstrvalve",langEnum::strstrvalve);
	langMap.insert("strIR_EEVA_OPEN",langEnum::strIR_EEVA_OPEN);
	langMap.insert("strIR_EEVB_OPEN",langEnum::strIR_EEVB_OPEN);
	langMap.insert("strIR_CWVA_OPEN",langEnum::strIR_CWVA_OPEN);
	langMap.insert("strIR_CWVB_OPEN",langEnum::strIR_CWVB_OPEN);
	langMap.insert("strFan",langEnum::strFan);
	langMap.insert("strIR_EFAN_RS_x10",langEnum::strIR_EFAN_RS_x10);
	langMap.insert("strIR_EFAN_AFV_x10",langEnum::strIR_EFAN_AFV_x10);
	langMap.insert("strPowerStatus",langEnum::strPowerStatus);
	langMap.insert("strIR_IPWV_A_x10",langEnum::strIR_IPWV_A_x10);
	langMap.insert("strIR_IPWV_B_x10",langEnum::strIR_IPWV_B_x10);
	langMap.insert("strIR_IPWV_C_x10",langEnum::strIR_IPWV_C_x10);
	langMap.insert("strIR_IPWF_A_x10",langEnum::strIR_IPWF_A_x10);
	langMap.insert("strIR_IPWF_B_x10",langEnum::strIR_IPWF_B_x10);
	langMap.insert("strIR_IPWF_C_x10",langEnum::strIR_IPWF_C_x10);
	langMap.insert("strAlarmInfo",langEnum::strAlarmInfo);
	langMap.insert("strIS_SYNT_ALM",langEnum::strIS_SYNT_ALM);
	langMap.insert("strIS_IT_OH_ALM",langEnum::strIS_IT_OH_ALM);
	langMap.insert("strIS_IT_OL_ALM",langEnum::strIS_IT_OL_ALM);
	langMap.insert("strIS_IH_OH_ALM",langEnum::strIS_IH_OH_ALM);
	langMap.insert("strIS_IH_OL_ALM",langEnum::strIS_IH_OL_ALM);
	langMap.insert("strIS_OT_OH_ALM",langEnum::strIS_OT_OH_ALM);
	langMap.insert("strIS_OT_OL_ALM",langEnum::strIS_OT_OL_ALM);
	langMap.insert("strIS_SMK_ALM",langEnum::strIS_SMK_ALM);
	langMap.insert("strIS_FSD_ALM",langEnum::strIS_FSD_ALM);
	langMap.insert("strIS_SYSDW_ALM",langEnum::strIS_SYSDW_ALM);
	langMap.insert("strIS_IPW_A_VOH_ALM",langEnum::strIS_IPW_A_VOH_ALM);
	langMap.insert("strIS_IPW_B_VOH_ALM",langEnum::strIS_IPW_B_VOH_ALM);
	langMap.insert("strIS_IPW_C_VOH_ALM",langEnum::strIS_IPW_C_VOH_ALM);
	langMap.insert("strIS_IPW_A_VOL_ALM",langEnum::strIS_IPW_A_VOL_ALM);
	langMap.insert("strIS_IPW_B_VOL_ALM",langEnum::strIS_IPW_B_VOL_ALM);
	langMap.insert("strIS_IPW_C_VOL_ALM",langEnum::strIS_IPW_C_VOL_ALM);
	langMap.insert("strIS_IPW_PHUB_ALM",langEnum::strIS_IPW_PHUB_ALM);
	langMap.insert("strIS_IPW_FOL_ALM",langEnum::strIS_IPW_FOL_ALM);
	langMap.insert("strIS_IPW_FOH_ALM",langEnum::strIS_IPW_FOH_ALM);
	langMap.insert("strIS_IPW_A_PHL_ALM",langEnum::strIS_IPW_A_PHL_ALM);
	langMap.insert("strIS_IPW_B_PHL_ALM",langEnum::strIS_IPW_B_PHL_ALM);
	langMap.insert("strIS_IPW_C_PHL_ALM",langEnum::strIS_IPW_C_PHL_ALM);
	langMap.insert("strIS_IPW_PHSE_ALM",langEnum::strIS_IPW_PHSE_ALM);
	langMap.insert("strIS_EFAN1_ALM",langEnum::strIS_EFAN1_ALM);
	langMap.insert("strIS_EFAN2_ALM",langEnum::strIS_EFAN2_ALM);
	langMap.insert("strIS_EFAN3_ALM",langEnum::strIS_EFAN3_ALM);
	langMap.insert("strIS_AF_LOST_ALM",langEnum::strIS_AF_LOST_ALM);
	langMap.insert("strIS_EFAN_FLT_ALM",langEnum::strIS_EFAN_FLT_ALM);
	langMap.insert("strIS_CFAN_ALM",langEnum::strIS_CFAN_ALM);
	langMap.insert("strIS_CMPR_HP_ALM",langEnum::strIS_CMPR_HP_ALM);
	langMap.insert("strIS_CMPR_HPLK_ALM",langEnum::strIS_CMPR_HPLK_ALM);
	langMap.insert("strIS_CMPR_LP_ALM",langEnum::strIS_CMPR_LP_ALM);
	langMap.insert("strIS_CMPR_LPLK_ALM",langEnum::strIS_CMPR_LPLK_ALM);
	langMap.insert("strIS_CMPR_EXSU_HT_ALM",langEnum::strIS_CMPR_EXSU_HT_ALM);
	langMap.insert("strIS_CMPR_EXSU_HTLK_ALM",langEnum::strIS_CMPR_EXSU_HTLK_ALM);
	langMap.insert("strIS_CMPR_F_ABN",langEnum::strIS_CMPR_F_ABN);
	langMap.insert("strIS_CMPR_F_ABNLK",langEnum::strIS_CMPR_F_ABNLK);
	langMap.insert("strIS_CMPR_HP_LMTF",langEnum::strIS_CMPR_HP_LMTF);
	langMap.insert("strIS_VFD_COMM_FLT",langEnum::strIS_VFD_COMM_FLT);
	langMap.insert("strIS_VFD_AVOI",langEnum::strIS_VFD_AVOI);
	langMap.insert("strIS_VFD_DVOI",langEnum::strIS_VFD_DVOI);
	langMap.insert("strIS_VFD_SVOI",langEnum::strIS_VFD_SVOI);
	langMap.insert("strIS_VFD_BAD_FLT",langEnum::strIS_VFD_BAD_FLT);
	langMap.insert("strIS_VFD_AVOV",langEnum::strIS_VFD_AVOV);
	langMap.insert("strIS_VFD_DVOV",langEnum::strIS_VFD_DVOV);
	langMap.insert("strIS_VFD_SVOV",langEnum::strIS_VFD_SVOV);
	langMap.insert("strIS_VFD_BUS_LV",langEnum::strIS_VFD_BUS_LV);
	langMap.insert("strIS_VFD_MOL",langEnum::strIS_VFD_MOL);
	langMap.insert("strIS_VFD_OL",langEnum::strIS_VFD_OL);
	langMap.insert("strIS_VFD_SPI",langEnum::strIS_VFD_SPI);
	langMap.insert("strIS_VFD_SPO",langEnum::strIS_VFD_SPO);
	langMap.insert("strIS_VFD_REV_OT",langEnum::strIS_VFD_REV_OT);
	langMap.insert("strIS_VFD_INV_OT",langEnum::strIS_VFD_INV_OT);
	langMap.insert("strIS_VFD_485_FLT",langEnum::strIS_VFD_485_FLT);
	langMap.insert("strIS_VFD_IDTT_FLT",langEnum::strIS_VFD_IDTT_FLT);
	langMap.insert("strIS_VFD_EEPROM_FLT",langEnum::strIS_VFD_EEPROM_FLT);
	langMap.insert("strIS_VFD_ETH1",langEnum::strIS_VFD_ETH1);
	langMap.insert("strIS_VFD_ETH2",langEnum::strIS_VFD_ETH2);
	langMap.insert("strIS_VFD_DEU",langEnum::strIS_VFD_DEU);
	langMap.insert("strIS_VFD_STO",langEnum::strIS_VFD_STO);
	langMap.insert("strIS_VFD_LL",langEnum::strIS_VFD_LL);
	langMap.insert("strIS_HUMI_ALM",langEnum::strIS_HUMI_ALM);
	langMap.insert("strIS_HUMI_AHI_DTT_ALM",langEnum::strIS_HUMI_AHI_DTT_ALM);
	langMap.insert("strIS_HUMI_DWV_ALM",langEnum::strIS_HUMI_DWV_ALM);
	langMap.insert("strIS_HUMI_WFLWL_ALM",langEnum::strIS_HUMI_WFLWL_ALM);
	langMap.insert("strIS_HUMI_WLS_ALM",langEnum::strIS_HUMI_WLS_ALM);
	langMap.insert("strIS_HUMI_CWHWL_ALM",langEnum::strIS_HUMI_CWHWL_ALM);
	langMap.insert("strIS_HEAT_ALM",langEnum::strIS_HEAT_ALM);
	langMap.insert("strIS_HEAT_PTT_ALM",langEnum::strIS_HEAT_PTT_ALM);
	langMap.insert("strIS_HEAT1_STS",langEnum::strIS_HEAT1_STS);
	langMap.insert("strIS_HEAT2_STS",langEnum::strIS_HEAT2_STS);
	langMap.insert("strIS_HEAT1_ALM",langEnum::strIS_HEAT1_ALM);
	langMap.insert("strIS_HEAT2_ALM",langEnum::strIS_HEAT2_ALM);
	langMap.insert("strIS_ITSD1_FLT",langEnum::strIS_ITSD1_FLT);
	langMap.insert("strIS_ITSD2_FLT",langEnum::strIS_ITSD2_FLT);
	langMap.insert("strIS_IHSD1_FLT",langEnum::strIS_IHSD1_FLT);
	langMap.insert("strIS_OTSD1_FLT",langEnum::strIS_OTSD1_FLT);
	langMap.insert("strIS_OTSD2_FLT",langEnum::strIS_OTSD2_FLT);
	langMap.insert("strIS_OTSD3_FLT",langEnum::strIS_OTSD3_FLT);
	langMap.insert("strIS_OHSD1_FLT",langEnum::strIS_OHSD1_FLT);
	langMap.insert("strIS_EXSU_TSD_FLT",langEnum::strIS_EXSU_TSD_FLT);
	langMap.insert("strIS_SUCT_TSD_FLT",langEnum::strIS_SUCT_TSD_FLT);
	langMap.insert("strIS_SUCT_PSD_FLT",langEnum::strIS_SUCT_PSD_FLT);
	langMap.insert("strIS_EXSU_PSD_FLT",langEnum::strIS_EXSU_PSD_FLT);
	langMap.insert("strIS_LEWYSD_FLT",langEnum::strIS_LEWYSD_FLT);
	langMap.insert("strIS_RTHSD0_FLT",langEnum::strIS_RTHSD0_FLT);
	langMap.insert("strIS_RTHSD1_FLT",langEnum::strIS_RTHSD1_FLT);
	langMap.insert("strIS_RTHSD2_FLT",langEnum::strIS_RTHSD2_FLT);
	langMap.insert("strIS_RTHSD3_FLT",langEnum::strIS_RTHSD3_FLT);
	langMap.insert("strIS_RTHSD4_FLT",langEnum::strIS_RTHSD4_FLT);
	langMap.insert("strIS_RTHSD5_FLT",langEnum::strIS_RTHSD5_FLT);
	langMap.insert("strIS_RTHSD6_FLT",langEnum::strIS_RTHSD6_FLT);
	langMap.insert("strIS_RTHSD7_FLT",langEnum::strIS_RTHSD7_FLT);
	langMap.insert("strIS_RTHSD8_FLT",langEnum::strIS_RTHSD8_FLT);
	langMap.insert("strIS_RTHSD9_FLT",langEnum::strIS_RTHSD9_FLT);
	langMap.insert("strIS_RTHSD10_FLT",langEnum::strIS_RTHSD10_FLT);
	langMap.insert("strIS_RTHSD11_FLT",langEnum::strIS_RTHSD11_FLT);
	langMap.insert("strIS_RTHSD12_FLT",langEnum::strIS_RTHSD12_FLT);
	langMap.insert("strIS_RTHSD13_FLT",langEnum::strIS_RTHSD13_FLT);
	langMap.insert("strIS_RTHSD14_FLT",langEnum::strIS_RTHSD14_FLT);
	langMap.insert("strIS_RTHSD15_FLT",langEnum::strIS_RTHSD15_FLT);
	langMap.insert("strIS_NET_COMM_FLT",langEnum::strIS_NET_COMM_FLT);
	langMap.insert("strIS_NET_ADDR_CNF",langEnum::strIS_NET_ADDR_CNF);
	langMap.insert("strIS_NET_SFVER_ERR",langEnum::strIS_NET_SFVER_ERR);
	langMap.insert("strIS_NET_S00_OFFLN",langEnum::strIS_NET_S00_OFFLN);
	langMap.insert("strIS_NET_S01_OFFLN",langEnum::strIS_NET_S01_OFFLN);
	langMap.insert("strIS_NET_S02_OFFLN",langEnum::strIS_NET_S02_OFFLN);
	langMap.insert("strIS_NET_S03_OFFLN",langEnum::strIS_NET_S03_OFFLN);
	langMap.insert("strIS_NET_S04_OFFLN",langEnum::strIS_NET_S04_OFFLN);
	langMap.insert("strIS_NET_S05_OFFLN",langEnum::strIS_NET_S05_OFFLN);
	langMap.insert("strIS_NET_S06_OFFLN",langEnum::strIS_NET_S06_OFFLN);
	langMap.insert("strIS_NET_S07_OFFLN",langEnum::strIS_NET_S07_OFFLN);
	langMap.insert("strIS_NET_S08_OFFLN",langEnum::strIS_NET_S08_OFFLN);
	langMap.insert("strIS_NET_S09_OFFLN",langEnum::strIS_NET_S09_OFFLN);
	langMap.insert("strIS_NET_S10_OFFLN",langEnum::strIS_NET_S10_OFFLN);
	langMap.insert("strIS_NET_S11_OFFLN",langEnum::strIS_NET_S11_OFFLN);
	langMap.insert("strIS_NET_S12_OFFLN",langEnum::strIS_NET_S12_OFFLN);
	langMap.insert("strIS_NET_S13_OFFLN",langEnum::strIS_NET_S13_OFFLN);
	langMap.insert("strIS_NET_S14_OFFLN",langEnum::strIS_NET_S14_OFFLN);
	langMap.insert("strIS_NET_S15_OFFLN",langEnum::strIS_NET_S15_OFFLN);
	langMap.insert("strIS_NET_S16_OFFLN",langEnum::strIS_NET_S16_OFFLN);
	langMap.insert("strIS_NET_S17_OFFLN",langEnum::strIS_NET_S17_OFFLN);
	langMap.insert("strIS_NET_S18_OFFLN",langEnum::strIS_NET_S18_OFFLN);
	langMap.insert("strIS_NET_S19_OFFLN",langEnum::strIS_NET_S19_OFFLN);
	langMap.insert("strIS_NET_S20_OFFLN",langEnum::strIS_NET_S20_OFFLN);
	langMap.insert("strIS_NET_S21_OFFLN",langEnum::strIS_NET_S21_OFFLN);
	langMap.insert("strIS_NET_S22_OFFLN",langEnum::strIS_NET_S22_OFFLN);
	langMap.insert("strIS_NET_S23_OFFLN",langEnum::strIS_NET_S23_OFFLN);
	langMap.insert("strIS_NET_S24_OFFLN",langEnum::strIS_NET_S24_OFFLN);
	langMap.insert("strIS_NET_S25_OFFLN",langEnum::strIS_NET_S25_OFFLN);
	langMap.insert("strIS_NET_S26_OFFLN",langEnum::strIS_NET_S26_OFFLN);
	langMap.insert("strIS_NET_S27_OFFLN",langEnum::strIS_NET_S27_OFFLN);
	langMap.insert("strIS_NET_S28_OFFLN",langEnum::strIS_NET_S28_OFFLN);
	langMap.insert("strIS_NET_S29_OFFLN",langEnum::strIS_NET_S29_OFFLN);
	langMap.insert("strIS_NET_S30_OFFLN",langEnum::strIS_NET_S30_OFFLN);
	langMap.insert("strIS_NET_S31_OFFLN",langEnum::strIS_NET_S31_OFFLN);
	langMap.insert("strIS_NET_S32_OFFLN",langEnum::strIS_NET_S32_OFFLN);
	langMap.insert("strIS_NET_S33_OFFLN",langEnum::strIS_NET_S33_OFFLN);
	langMap.insert("strIS_NET_S34_OFFLN",langEnum::strIS_NET_S34_OFFLN);
	langMap.insert("strIS_NET_S35_OFFLN",langEnum::strIS_NET_S35_OFFLN);
	langMap.insert("strIS_NET_S36_OFFLN",langEnum::strIS_NET_S36_OFFLN);
	langMap.insert("strIS_NET_S37_OFFLN",langEnum::strIS_NET_S37_OFFLN);
	langMap.insert("strIS_NET_S38_OFFLN",langEnum::strIS_NET_S38_OFFLN);
	langMap.insert("strIS_NET_S39_OFFLN",langEnum::strIS_NET_S39_OFFLN);
	langMap.insert("strIS_NET_S40_OFFLN",langEnum::strIS_NET_S40_OFFLN);
	langMap.insert("strIS_NET_S41_OFFLN",langEnum::strIS_NET_S41_OFFLN);
	langMap.insert("strIS_NET_S42_OFFLN",langEnum::strIS_NET_S42_OFFLN);
	langMap.insert("strIS_NET_S43_OFFLN",langEnum::strIS_NET_S43_OFFLN);
	langMap.insert("strIS_NET_S44_OFFLN",langEnum::strIS_NET_S44_OFFLN);
	langMap.insert("strIS_NET_S45_OFFLN",langEnum::strIS_NET_S45_OFFLN);
	langMap.insert("strIS_NET_S46_OFFLN",langEnum::strIS_NET_S46_OFFLN);
	langMap.insert("strIS_NET_S47_OFFLN",langEnum::strIS_NET_S47_OFFLN);
	langMap.insert("strIS_NET_S48_OFFLN",langEnum::strIS_NET_S48_OFFLN);
	langMap.insert("strIS_NET_S49_OFFLN",langEnum::strIS_NET_S49_OFFLN);
	langMap.insert("strIS_NET_S50_OFFLN",langEnum::strIS_NET_S50_OFFLN);
	langMap.insert("strIS_NET_S51_OFFLN",langEnum::strIS_NET_S51_OFFLN);
	langMap.insert("strIS_NET_S52_OFFLN",langEnum::strIS_NET_S52_OFFLN);
	langMap.insert("strIS_NET_S53_OFFLN",langEnum::strIS_NET_S53_OFFLN);
	langMap.insert("strIS_NET_S54_OFFLN",langEnum::strIS_NET_S54_OFFLN);
	langMap.insert("strIS_NET_S55_OFFLN",langEnum::strIS_NET_S55_OFFLN);
	langMap.insert("strIS_NET_S56_OFFLN",langEnum::strIS_NET_S56_OFFLN);
	langMap.insert("strIS_NET_S57_OFFLN",langEnum::strIS_NET_S57_OFFLN);
	langMap.insert("strIS_NET_S58_OFFLN",langEnum::strIS_NET_S58_OFFLN);
	langMap.insert("strIS_NET_S59_OFFLN",langEnum::strIS_NET_S59_OFFLN);
	langMap.insert("strIS_NET_S60_OFFLN",langEnum::strIS_NET_S60_OFFLN);
	langMap.insert("strIS_NET_S61_OFFLN",langEnum::strIS_NET_S61_OFFLN);
	langMap.insert("strIS_NET_S62_OFFLN",langEnum::strIS_NET_S62_OFFLN);
	langMap.insert("strIS_NET_S63_OFFLN",langEnum::strIS_NET_S63_OFFLN);
	langMap.insert("strOperRecord",langEnum::strOperRecord);
	langMap.insert("strIR_SYS_WKTM",langEnum::strIR_SYS_WKTM);
	langMap.insert("strIR_EFAN_WKTM",langEnum::strIR_EFAN_WKTM);
	langMap.insert("strIR_HUMI_WKTM",langEnum::strIR_HUMI_WKTM);
	langMap.insert("strIR_HRAT1_WKTM",langEnum::strIR_HRAT1_WKTM);
	langMap.insert("strIR_HRAT2_WKTM",langEnum::strIR_HRAT2_WKTM);
	langMap.insert("strIR_ODMA_WKTM",langEnum::strIR_ODMA_WKTM);
	langMap.insert("strIR_ODMB_WKTM",langEnum::strIR_ODMB_WKTM);
	langMap.insert("strIR_CMPRA_WKTM",langEnum::strIR_CMPRA_WKTM);
	langMap.insert("strIR_CMPRB_WKTM",langEnum::strIR_CMPRB_WKTM);
	langMap.insert("strIR_FLT_WKTM",langEnum::strIR_FLT_WKTM);
	langMap.insert("strIR_TOTAL_KWH",langEnum::strIR_TOTAL_KWH);
	langMap.insert("strUserSet",langEnum::strUserSet);
	langMap.insert("strGeneralSet",langEnum::strGeneralSet);
	langMap.insert("strRU_ONOFF_CTL",langEnum::strRU_ONOFF_CTL);
	langMap.insert("strRU_CTL_WAYS",langEnum::strRU_CTL_WAYS);
	langMap.insert("strRU_OTS_x10",langEnum::strRU_OTS_x10);
	langMap.insert("strRU_ITS_x10",langEnum::strRU_ITS_x10);
	langMap.insert("strRU_HS_x10",langEnum::strRU_HS_x10);
	langMap.insert("strRU_AS_DLY",langEnum::strRU_AS_DLY);
	langMap.insert("strRU_AS_DLY_EN",langEnum::strRU_AS_DLY_EN);
	langMap.insert("strRU_USER_CFG_CLN",langEnum::strRU_USER_CFG_CLN);
	langMap.insert("strRU_FLTL_CLEAR",langEnum::strRU_FLTL_CLEAR);
	langMap.insert("strRU_CLCTL_PR_x10",langEnum::strRU_CLCTL_PR_x10);
	langMap.insert("strRU_HTCTL_PR_x10",langEnum::strRU_HTCTL_PR_x10);
	langMap.insert("strRU_IAF_AHCTL_PR_x10",langEnum::strRU_IAF_AHCTL_PR_x10);
	langMap.insert("strRU_IAF_DHCTL_PR_x10",langEnum::strRU_IAF_DHCTL_PR_x10);
	langMap.insert("strRU_TCTL_DF_x10",langEnum::strRU_TCTL_DF_x10);
	langMap.insert("strRU_HCTL_DF_x10",langEnum::strRU_HCTL_DF_x10);
	langMap.insert("strTimeSet",langEnum::strTimeSet);
	langMap.insert("strRU_DATE_YY",langEnum::strRU_DATE_YY);
	langMap.insert("strRU_DATE_MM",langEnum::strRU_DATE_MM);
	langMap.insert("strRU_DATE_DD",langEnum::strRU_DATE_DD);
	langMap.insert("strRU_TIME_HH",langEnum::strRU_TIME_HH);
	langMap.insert("strRU_TIME_MM",langEnum::strRU_TIME_MM);
	langMap.insert("strRU_TIME_SS",langEnum::strRU_TIME_SS);
	langMap.insert("strRemoteComm",langEnum::strRemoteComm);
	langMap.insert("strRU_RMDBS_ADDR",langEnum::strRU_RMDBS_ADDR);
	langMap.insert("strRU_RMDBS_BAUD",langEnum::strRU_RMDBS_BAUD);
	langMap.insert("strNetworkSet",langEnum::strNetworkSet);
	langMap.insert("strRU_NET_EN",langEnum::strRU_NET_EN);
	langMap.insert("strRU_NET_ADDR",langEnum::strRU_NET_ADDR);
	langMap.insert("strRU_NET_NUMS",langEnum::strRU_NET_NUMS);
	langMap.insert("strRU_NET_SW_NUMS",langEnum::strRU_NET_SW_NUMS);
	langMap.insert("strRU_NET_RTT_CYC",langEnum::strRU_NET_RTT_CYC);
	langMap.insert("strRU_NET_WK_NUMS",langEnum::strRU_NET_WK_NUMS);
	langMap.insert("strRU_NET_RQ_SYNC",langEnum::strRU_NET_RQ_SYNC);
	langMap.insert("strRU_NET_OV_FUNC",langEnum::strRU_NET_OV_FUNC);
	langMap.insert("strRU_NET_HT_ALLON",langEnum::strRU_NET_HT_ALLON);
	langMap.insert("strMainSet",langEnum::strMainSet);
	langMap.insert("strRM_MMD_FANRS_CTL_x10",langEnum::strRM_MMD_FANRS_CTL_x10);
	langMap.insert("strRM_MMD_ODM_CTL",langEnum::strRM_MMD_ODM_CTL);
	langMap.insert("strRM_MMD_HEAT_CTL",langEnum::strRM_MMD_HEAT_CTL);
	langMap.insert("strRM_MMD_HUMI_CTL",langEnum::strRM_MMD_HUMI_CTL);
	langMap.insert("strRM_MMD_INWSV_CTL",langEnum::strRM_MMD_INWSV_CTL);
	langMap.insert("strRM_MMD_DEWSV_CTL",langEnum::strRM_MMD_DEWSV_CTL);
	langMap.insert("strRM_MMD_LLSV_CTL",langEnum::strRM_MMD_LLSV_CTL);
	langMap.insert("strRM_MMD_CMPRF",langEnum::strRM_MMD_CMPRF);
	langMap.insert("strRM_MMD_EEV_OPEN_CTLMD",langEnum::strRM_MMD_EEV_OPEN_CTLMD);
	langMap.insert("strRM_MMD_EEV_OPEN",langEnum::strRM_MMD_EEV_OPEN);
	langMap.insert("strRM_MMD_DBTM",langEnum::strRM_MMD_DBTM);
	langMap.insert("strParaCorre",langEnum::strParaCorre);
	langMap.insert("strRM_AFV_CF_x100",langEnum::strRM_AFV_CF_x100);
	langMap.insert("strRM_CCP_CF_x100",langEnum::strRM_CCP_CF_x100);
	langMap.insert("strRM_ITSD1_CF_x10",langEnum::strRM_ITSD1_CF_x10);
	langMap.insert("strRM_ITSD2_CF_x10",langEnum::strRM_ITSD2_CF_x10);
	langMap.insert("strRM_OTSD1_CF_x10",langEnum::strRM_OTSD1_CF_x10);
	langMap.insert("strRM_OTSD2_CF_x10",langEnum::strRM_OTSD2_CF_x10);
	langMap.insert("strRM_OTSD3_CF_x10",langEnum::strRM_OTSD3_CF_x10);
	langMap.insert("strRM_IHSD1_CF_x10",langEnum::strRM_IHSD1_CF_x10);
	langMap.insert("strRM_OHSD1_CF_x10",langEnum::strRM_OHSD1_CF_x10);
	langMap.insert("strRM_SUCTT_CF_x10",langEnum::strRM_SUCTT_CF_x10);
	langMap.insert("strRM_EXSUT_CF_x10",langEnum::strRM_EXSUT_CF_x10);
	langMap.insert("strRM_SUCTP_CF_x10",langEnum::strRM_SUCTP_CF_x10);
	langMap.insert("strRM_EXSUP_CF_x10",langEnum::strRM_EXSUP_CF_x10);
	langMap.insert("strRM_LEWY_CF_x10",langEnum::strRM_LEWY_CF_x10);
	langMap.insert("strRM_AHI_CF_x10",langEnum::strRM_AHI_CF_x10);
	langMap.insert("strRM_RTSD01_CF_x10",langEnum::strRM_RTSD01_CF_x10);
	langMap.insert("strRM_RTSD02_CF_x10",langEnum::strRM_RTSD02_CF_x10);
	langMap.insert("strRM_RTSD03_CF_x10",langEnum::strRM_RTSD03_CF_x10);
	langMap.insert("strRM_RTSD04_CF_x10",langEnum::strRM_RTSD04_CF_x10);
	langMap.insert("strRM_RTSD05_CF_x10",langEnum::strRM_RTSD05_CF_x10);
	langMap.insert("strRM_RTSD06_CF_x10",langEnum::strRM_RTSD06_CF_x10);
	langMap.insert("strRM_RTSD07_CF_x10",langEnum::strRM_RTSD07_CF_x10);
	langMap.insert("strRM_RTSD08_CF_x10",langEnum::strRM_RTSD08_CF_x10);
	langMap.insert("strRM_RTSD09_CF_x10",langEnum::strRM_RTSD09_CF_x10);
	langMap.insert("strRM_RTSD10_CF_x10",langEnum::strRM_RTSD10_CF_x10);
	langMap.insert("strRM_RTSD11_CF_x10",langEnum::strRM_RTSD11_CF_x10);
	langMap.insert("strRM_RTSD12_CF_x10",langEnum::strRM_RTSD12_CF_x10);
	langMap.insert("strRM_RTSD13_CF_x10",langEnum::strRM_RTSD13_CF_x10);
	langMap.insert("strRM_RTSD14_CF_x10",langEnum::strRM_RTSD14_CF_x10);
	langMap.insert("strRM_RTSD15_CF_x10",langEnum::strRM_RTSD15_CF_x10);
	langMap.insert("strRM_RTSD16_CF_x10",langEnum::strRM_RTSD16_CF_x10);
	langMap.insert("strRM_RHSD01_CF_x10",langEnum::strRM_RHSD01_CF_x10);
	langMap.insert("strRM_RHSD02_CF_x10",langEnum::strRM_RHSD02_CF_x10);
	langMap.insert("strRM_RHSD03_CF_x10",langEnum::strRM_RHSD03_CF_x10);
	langMap.insert("strRM_RHSD04_CF_x10",langEnum::strRM_RHSD04_CF_x10);
	langMap.insert("strRM_RHSD05_CF_x10",langEnum::strRM_RHSD05_CF_x10);
	langMap.insert("strRM_RHSD06_CF_x10",langEnum::strRM_RHSD06_CF_x10);
	langMap.insert("strRM_RHSD07_CF_x10",langEnum::strRM_RHSD07_CF_x10);
	langMap.insert("strRM_RHSD08_CF_x10",langEnum::strRM_RHSD08_CF_x10);
	langMap.insert("strRM_RHSD09_CF_x10",langEnum::strRM_RHSD09_CF_x10);
	langMap.insert("strRM_RHSD10_CF_x10",langEnum::strRM_RHSD10_CF_x10);
	langMap.insert("strRM_RHSD11_CF_x10",langEnum::strRM_RHSD11_CF_x10);
	langMap.insert("strRM_RHSD12_CF_x10",langEnum::strRM_RHSD12_CF_x10);
	langMap.insert("strRM_RHSD13_CF_x10",langEnum::strRM_RHSD13_CF_x10);
	langMap.insert("strRM_RHSD14_CF_x10",langEnum::strRM_RHSD14_CF_x10);
	langMap.insert("strRM_RHSD15_CF_x10",langEnum::strRM_RHSD15_CF_x10);
	langMap.insert("strRM_RHSD16_CF_x10",langEnum::strRM_RHSD16_CF_x10);
	langMap.insert("strClearingControl",langEnum::strClearingControl);
	langMap.insert("strRM_SYS_WKTM_CLN",langEnum::strRM_SYS_WKTM_CLN);
	langMap.insert("strRM_EFAN_WKTM_CLN",langEnum::strRM_EFAN_WKTM_CLN);
	langMap.insert("strRM_HUMI_WKTM_CLN",langEnum::strRM_HUMI_WKTM_CLN);
	langMap.insert("strRM_HEAT1_WKTM_CLN",langEnum::strRM_HEAT1_WKTM_CLN);
	langMap.insert("strRM_HEAT2_WKTM_CLN",langEnum::strRM_HEAT2_WKTM_CLN);
	langMap.insert("strRM_FLT_WKTM_CLN",langEnum::strRM_FLT_WKTM_CLN);
	langMap.insert("strRM_ODM_WKTM_CLN",langEnum::strRM_ODM_WKTM_CLN);
	langMap.insert("strRM_CPUMP_WKTM_CLN",langEnum::strRM_CPUMP_WKTM_CLN);
	langMap.insert("strRM_CMPR_WKTM_CLN",langEnum::strRM_CMPR_WKTM_CLN);
	langMap.insert("strDeviceEnable",langEnum::strDeviceEnable);
	langMap.insert("strRM_VACUMD_EN",langEnum::strRM_VACUMD_EN);
	langMap.insert("strRM_MMD_EN",langEnum::strRM_MMD_EN);
	langMap.insert("strFactorySet",langEnum::strFactorySet);
	langMap.insert("strTmpCtrlr",langEnum::strTmpCtrlr);
	langMap.insert("strLewyCtrlr",langEnum::strLewyCtrlr);
	langMap.insert("strRF_AC_MODEL",langEnum::strRF_AC_MODEL);
	langMap.insert("strRF_REFRIG_TYPE",langEnum::strRF_REFRIG_TYPE);
	langMap.insert("strRF_T_CALC_WAYS",langEnum::strRF_T_CALC_WAYS);
	langMap.insert("strRF_CLMD_INND_x10",langEnum::strRF_CLMD_INND_x10);
	langMap.insert("strRF_EFAN_CTL_WAYS",langEnum::strRF_EFAN_CTL_WAYS);
	langMap.insert("strRF_CTL_CYC",langEnum::strRF_CTL_CYC);
	langMap.insert("strRF_PRT_CYC",langEnum::strRF_PRT_CYC);
	langMap.insert("strRF_EFAN_FLT_MNTNTM",langEnum::strRF_EFAN_FLT_MNTNTM);
	langMap.insert("strRF_AI_VIS",langEnum::strRF_AI_VIS);
	langMap.insert("strRF_LEWY_CTL_x10",langEnum::strRF_LEWY_CTL_x10);
	langMap.insert("strRF_DH_LEWY_CF_x10",langEnum::strRF_DH_LEWY_CF_x10);
	langMap.insert("strRF_LEWYCTL_CF_x10",langEnum::strRF_LEWYCTL_CF_x10);
	langMap.insert("strRF_CPUMP_MIN_WKTM",langEnum::strRF_CPUMP_MIN_WKTM);
	langMap.insert("strRF_WFWV_ON_TM",langEnum::strRF_WFWV_ON_TM);
	langMap.insert("strRF_WFWV_OFF_TM",langEnum::strRF_WFWV_OFF_TM);
	langMap.insert("strRF_DHLT_LMT_DF_x10",langEnum::strRF_DHLT_LMT_DF_x10);
	langMap.insert("strRF_IDM_AFV_DISP_EN",langEnum::strRF_IDM_AFV_DISP_EN);
	langMap.insert("strRF_SYS_CCP_DISP_EN",langEnum::strRF_SYS_CCP_DISP_EN);
	langMap.insert("strRF_CLAHMD_EN",langEnum::strRF_CLAHMD_EN);
	langMap.insert("strRF_DHCTL_EN",langEnum::strRF_DHCTL_EN);
	langMap.insert("strRF_DEV_EN1",langEnum::strRF_DEV_EN1);
	langMap.insert("strRF_DEV_EN2",langEnum::strRF_DEV_EN2);
	langMap.insert("strRF_DEV_EN3",langEnum::strRF_DEV_EN3);
	langMap.insert("strRF_IT_OH_x10",langEnum::strRF_IT_OH_x10);
	langMap.insert("strRF_IT_OL_x10",langEnum::strRF_IT_OL_x10);
	langMap.insert("strRF_OT_OH_x10",langEnum::strRF_OT_OH_x10);
	langMap.insert("strRF_OT_OL_x10",langEnum::strRF_OT_OL_x10);
	langMap.insert("strRF_H_OH_x10",langEnum::strRF_H_OH_x10);
	langMap.insert("strRF_H_OL_x10",langEnum::strRF_H_OL_x10);
	langMap.insert("strCompSettings",langEnum::strCompSettings);
	langMap.insert("strRF_HPFLT_SET_x10",langEnum::strRF_HPFLT_SET_x10);
	langMap.insert("strRF_LPFLT_SET_x10",langEnum::strRF_LPFLT_SET_x10);
	langMap.insert("strRF_LLCL_EN",langEnum::strRF_LLCL_EN);
	langMap.insert("strRF_PRT_MIN_TM",langEnum::strRF_PRT_MIN_TM);
	langMap.insert("strRF_CMPR_ON_TM",langEnum::strRF_CMPR_ON_TM);
	langMap.insert("strRF_CMPR_OFF_TM1",langEnum::strRF_CMPR_OFF_TM1);
	langMap.insert("strRF_CMPR_OFF_TM2",langEnum::strRF_CMPR_OFF_TM2);
	langMap.insert("strRF_CLCMPR_OFFND_x10",langEnum::strRF_CLCMPR_OFFND_x10);
	langMap.insert("strRF_CMPR_EXSU_HPPRT_x10",langEnum::strRF_CMPR_EXSU_HPPRT_x10);
	langMap.insert("strRF_CMPR_SUCT_LPPRT_x10",langEnum::strRF_CMPR_SUCT_LPPRT_x10);
	langMap.insert("strRF_CMPR_IPM_PRTT_x10",langEnum::strRF_CMPR_IPM_PRTT_x10);
	langMap.insert("strRF_CMPR_VFD_PRTI_x10",langEnum::strRF_CMPR_VFD_PRTI_x10);
	langMap.insert("strRF_CMPR_EXSU_HT_x10",langEnum::strRF_CMPR_EXSU_HT_x10);
	langMap.insert("strRF_CMPR_PAHP_PC1_x10",langEnum::strRF_CMPR_PAHP_PC1_x10);
	langMap.insert("strRF_CMPR_PAHP_PC2_x10",langEnum::strRF_CMPR_PAHP_PC2_x10);
	langMap.insert("strRF_CMPR_PAHP_PC3_x10",langEnum::strRF_CMPR_PAHP_PC3_x10);
	langMap.insert("strRF_CMPR_PAHP_PC4_x10",langEnum::strRF_CMPR_PAHP_PC4_x10);
	langMap.insert("strRF_CMPR_PAHP_PC5_x10",langEnum::strRF_CMPR_PAHP_PC5_x10);
	langMap.insert("strRF_CMPR_PDF_MUL_x10",langEnum::strRF_CMPR_PDF_MUL_x10);
	langMap.insert("strRF_CMPR_MINR_TM",langEnum::strRF_CMPR_MINR_TM);
	langMap.insert("strRF_CMPR_MINS_TM",langEnum::strRF_CMPR_MINS_TM);
	langMap.insert("strRF_CMPR_STLP_DLY",langEnum::strRF_CMPR_STLP_DLY);
	langMap.insert("strRF_CMPR_LPPRT_DLY",langEnum::strRF_CMPR_LPPRT_DLY);
	langMap.insert("strRF_CMPR_SSTEP_F_x10",langEnum::strRF_CMPR_SSTEP_F_x10);
	langMap.insert("strRF_CMPR_SHOLD_F_x10",langEnum::strRF_CMPR_SHOLD_F_x10);
	langMap.insert("strRF_CMPR_DWFPRT_F_x10",langEnum::strRF_CMPR_DWFPRT_F_x10);
	langMap.insert("strRF_CMPR_SHOLD_TM",langEnum::strRF_CMPR_SHOLD_TM);
	langMap.insert("strRF_CMPR_VFD_STEP_x10",langEnum::strRF_CMPR_VFD_STEP_x10);
	langMap.insert("strRF_CMPR_VFD_REOF_x10",langEnum::strRF_CMPR_VFD_REOF_x10);
	langMap.insert("strRF_CMPR_REO_RISKF_x10",langEnum::strRF_CMPR_REO_RISKF_x10);
	langMap.insert("strRF_CMPR_CMPL_REOTM",langEnum::strRF_CMPR_CMPL_REOTM);
	langMap.insert("strRF_CMPR_CP_x10",langEnum::strRF_CMPR_CP_x10);
	langMap.insert("strRF_CMPR_CI_x10",langEnum::strRF_CMPR_CI_x10);
	langMap.insert("strRF_CMPR_HP_x10",langEnum::strRF_CMPR_HP_x10);
	langMap.insert("strRF_CMPR_HI_x10",langEnum::strRF_CMPR_HI_x10);
	langMap.insert("strRF_CMPR_PAP",langEnum::strRF_CMPR_PAP);
	langMap.insert("strRF_CMPR_PAI",langEnum::strRF_CMPR_PAI);
	langMap.insert("strRF_CMPR_CTL_CYC",langEnum::strRF_CMPR_CTL_CYC);
	langMap.insert("strRF_CMPR_RATE_F_x10",langEnum::strRF_CMPR_RATE_F_x10);
	langMap.insert("strRF_CMPR_MIN_F_x10",langEnum::strRF_CMPR_MIN_F_x10);
	langMap.insert("strRF_CMPR_CRS_NC1_x10",langEnum::strRF_CMPR_CRS_NC1_x10);
	langMap.insert("strRF_CMPR_CRS_NC2_x10",langEnum::strRF_CMPR_CRS_NC2_x10);
	langMap.insert("strRF_CMPR_CRS_NC3_x10",langEnum::strRF_CMPR_CRS_NC3_x10);
	langMap.insert("strRF_CMPR_CRS_NC4_x10",langEnum::strRF_CMPR_CRS_NC4_x10);
	langMap.insert("strRF_CMPR_CRS_NC5_x10",langEnum::strRF_CMPR_CRS_NC5_x10);
	langMap.insert("strRF_CMPR_CRS_NC6_x10",langEnum::strRF_CMPR_CRS_NC6_x10);
	langMap.insert("strRF_CMPR_RESN1_H_x10",langEnum::strRF_CMPR_RESN1_H_x10);
	langMap.insert("strRF_CMPR_RESN1_L_x10",langEnum::strRF_CMPR_RESN1_L_x10);
	langMap.insert("strRF_CMPR_RESN2_H_x10",langEnum::strRF_CMPR_RESN2_H_x10);
	langMap.insert("strRF_CMPR_RESN2_L_x10",langEnum::strRF_CMPR_RESN2_L_x10);
	langMap.insert("strRF_CMPR_RESN3_H_x10",langEnum::strRF_CMPR_RESN3_H_x10);
	langMap.insert("strRF_CMPR_RESN3_L_x10",langEnum::strRF_CMPR_RESN3_L_x10);
	langMap.insert("strRF_CMPR_RESN4_H_x10",langEnum::strRF_CMPR_RESN4_H_x10);
	langMap.insert("strRF_CMPR_RESN4_L_x10",langEnum::strRF_CMPR_RESN4_L_x10);
	langMap.insert("strRF_CMPR_RESN5_H_x10",langEnum::strRF_CMPR_RESN5_H_x10);
	langMap.insert("strRF_CMPR_RESN5_L_x10",langEnum::strRF_CMPR_RESN5_L_x10);
	langMap.insert("strRF_VFD_AVTM",langEnum::strRF_VFD_AVTM);
	langMap.insert("strRF_VFD_DVTM",langEnum::strRF_VFD_DVTM);
	langMap.insert("strRF_VFD_MAX_F_x10",langEnum::strRF_VFD_MAX_F_x10);
	langMap.insert("strRF_VFD_MIN_F_x10",langEnum::strRF_VFD_MIN_F_x10);
	langMap.insert("strFanSet",langEnum::strFanSet);
	langMap.insert("strRF_EFAN_UPSPEED_x10",langEnum::strRF_EFAN_UPSPEED_x10);
	langMap.insert("strRF_EFAN_NUM",langEnum::strRF_EFAN_NUM);
	langMap.insert("strRF_EFAN_GRPS",langEnum::strRF_EFAN_GRPS);
	langMap.insert("strRF_EFAN_RATE_RS_x10",langEnum::strRF_EFAN_RATE_RS_x10);
	langMap.insert("strRF_EFAN_MIN_RS_x10",langEnum::strRF_EFAN_MIN_RS_x10);
	langMap.insert("strRF_EFAN_CTL_CYC",langEnum::strRF_EFAN_CTL_CYC);
	langMap.insert("strRF_EFAN_RSP_x10",langEnum::strRF_EFAN_RSP_x10);
	langMap.insert("strRF_EFAN_RSI_x10",langEnum::strRF_EFAN_RSI_x10);
	langMap.insert("strRF_EFAN_CIOT_DF_x10",langEnum::strRF_EFAN_CIOT_DF_x10);
	langMap.insert("strRF_EFAN_HIOT_DF_x10",langEnum::strRF_EFAN_HIOT_DF_x10);
	langMap.insert("strRF_EFAN_IOT_AQ_CYC",langEnum::strRF_EFAN_IOT_AQ_CYC);
	langMap.insert("strRF_EFAN_ON_DLY",langEnum::strRF_EFAN_ON_DLY);
	langMap.insert("strExpanValueSet",langEnum::strExpanValueSet);
	langMap.insert("strRF_EEV_MAX_OPEN",langEnum::strRF_EEV_MAX_OPEN);
	langMap.insert("strRF_EEV_MIN_OPEN",langEnum::strRF_EEV_MIN_OPEN);
	langMap.insert("strRF_EEV_CTL_CYC",langEnum::strRF_EEV_CTL_CYC);
	langMap.insert("strRF_EEV_INIT_OPEN",langEnum::strRF_EEV_INIT_OPEN);
	langMap.insert("strRF_EEV_BLNC_OPEN",langEnum::strRF_EEV_BLNC_OPEN);
	langMap.insert("strRF_EEV_BLNC_TM",langEnum::strRF_EEV_BLNC_TM);
	langMap.insert("strRF_EEV_INIT_TM",langEnum::strRF_EEV_INIT_TM);
	langMap.insert("strRF_EEV_OFF_DLY",langEnum::strRF_EEV_OFF_DLY);
	langMap.insert("strRF_EEV_ET_MOP_x10",langEnum::strRF_EEV_ET_MOP_x10);
	langMap.insert("strRF_EEV_MOPP_x10",langEnum::strRF_EEV_MOPP_x10);
	langMap.insert("strRF_EEV_MOPI_x10",langEnum::strRF_EEV_MOPI_x10);
	langMap.insert("strRF_EEV_KPC_x10",langEnum::strRF_EEV_KPC_x10);
	langMap.insert("strRF_EEV_TIC_x10",langEnum::strRF_EEV_TIC_x10);
	langMap.insert("strRF_EEV_CSSHT_x10",langEnum::strRF_EEV_CSSHT_x10);
	langMap.insert("strRF_EEV_HSSHT_x10",langEnum::strRF_EEV_HSSHT_x10);
	langMap.insert("strHumiSet",langEnum::strHumiSet);
	langMap.insert("strRF_HUMI_TYPE",langEnum::strRF_HUMI_TYPE);
	langMap.insert("strRF_HUMI_INH_KG_x10",langEnum::strRF_HUMI_INH_KG_x10);
	langMap.insert("strRF_HUMI_IPV",langEnum::strRF_HUMI_IPV);
	langMap.insert("strRF_HUMI_IPPS",langEnum::strRF_HUMI_IPPS);
	langMap.insert("strRF_HUMI_INH_PHTI",langEnum::strRF_HUMI_INH_PHTI);
	langMap.insert("strRF_HUMI_INH_PHTTM",langEnum::strRF_HUMI_INH_PHTTM);
	langMap.insert("strRF_HUMI_INH_INWI",langEnum::strRF_HUMI_INH_INWI);
	langMap.insert("strRF_HUMI_INH_INWSI",langEnum::strRF_HUMI_INH_INWSI);
	langMap.insert("strRF_HUMI_INH_DEWI",langEnum::strRF_HUMI_INH_DEWI);
	langMap.insert("strRF_HUMI_NDEWI",langEnum::strRF_HUMI_NDEWI);
	langMap.insert("strRF_HUMI_MIN_DEWTM",langEnum::strRF_HUMI_MIN_DEWTM);
	langMap.insert("strRF_HUMI_DEW_TIMS",langEnum::strRF_HUMI_DEW_TIMS);
	langMap.insert("strRF_HUMI_SBDEM_CYC",langEnum::strRF_HUMI_SBDEM_CYC);
	langMap.insert("strRF_HUMI_DEM_TM",langEnum::strRF_HUMI_DEM_TM);
	langMap.insert("strRF_HUMI_WKDEM_CYC",langEnum::strRF_HUMI_WKDEM_CYC);
	langMap.insert("strRF_HUMI_HWTV",langEnum::strRF_HUMI_HWTV);
	langMap.insert("strRF_HUMI_HWDF",langEnum::strRF_HUMI_HWDF);
	langMap.insert("strRF_HUMI_CLN_TIMS",langEnum::strRF_HUMI_CLN_TIMS);
	langMap.insert("strHeaterSet",langEnum::strHeaterSet);
	langMap.insert("strRF_HEAT_CLASS",langEnum::strRF_HEAT_CLASS);
	langMap.insert("strRF_HEATCLASS1_UP_x10",langEnum::strRF_HEATCLASS1_UP_x10);
	langMap.insert("strRF_HEATCLASS1_DF_x10",langEnum::strRF_HEATCLASS1_DF_x10);
	langMap.insert("strRF_HEATCLASS2_UP_x10",langEnum::strRF_HEATCLASS2_UP_x10);
	langMap.insert("strRF_HEATCLASS2_DF_x10",langEnum::strRF_HEATCLASS2_DF_x10);
	langMap.insert("strRF_HEATCLASS3_UP_x10",langEnum::strRF_HEATCLASS3_UP_x10);
	langMap.insert("strRF_HEATCLASS3_DF_x10",langEnum::strRF_HEATCLASS3_DF_x10);
	langMap.insert("strPowerSet",langEnum::strPowerSet);
	langMap.insert("strRF_PHAS_SERR_ALW",langEnum::strRF_PHAS_SERR_ALW);
	langMap.insert("strRF_IPW_VOL",langEnum::strRF_IPW_VOL);
	langMap.insert("strRF_IPW_VOH",langEnum::strRF_IPW_VOH);
	langMap.insert("strRF_IPW_VDF",langEnum::strRF_IPW_VDF);
	langMap.insert("strRF_IPW_FOL",langEnum::strRF_IPW_FOL);
	langMap.insert("strRF_IPW_FOH",langEnum::strRF_IPW_FOH);
	langMap.insert("strRF_IPW_PHAV_UNB_x10",langEnum::strRF_IPW_PHAV_UNB_x10);
	langMap.insert("strRF_IPW_PHAV_UNBDF_x10",langEnum::strRF_IPW_PHAV_UNBDF_x10);
	langMap.insert("strClear_Recovery",langEnum::strClear_Recovery);
	langMap.insert("strRF_HISALM_CLN",langEnum::strRF_HISALM_CLN);
	langMap.insert("strRF_ALL_CFG_CLN",langEnum::strRF_ALL_CFG_CLN);
	langMap.insert("strAlarmEnable",langEnum::strAlarmEnable);
	langMap.insert("strRF_EFAN1_ALM_EN",langEnum::strRF_EFAN1_ALM_EN);
	langMap.insert("strRF_EFAN2_ALM_EN",langEnum::strRF_EFAN2_ALM_EN);
	langMap.insert("strRF_EFAN3_ALM_EN",langEnum::strRF_EFAN3_ALM_EN);
	langMap.insert("strRF_AF_LOST_ALM_EN",langEnum::strRF_AF_LOST_ALM_EN);
	langMap.insert("strRF_V_OL_ALM_EN",langEnum::strRF_V_OL_ALM_EN);
	langMap.insert("strRF_V_OH_ALM_EN",langEnum::strRF_V_OH_ALM_EN);
	langMap.insert("strRF_F_ABN_ALM_EN",langEnum::strRF_F_ABN_ALM_EN);
	langMap.insert("strRF_PHAS_LOS_ALM_EN",langEnum::strRF_PHAS_LOS_ALM_EN);
	langMap.insert("strRF_PHAS_UNB_ALM_EN",langEnum::strRF_PHAS_UNB_ALM_EN);
	langMap.insert("strRF_PHAS_SERR_ALM_EN",langEnum::strRF_PHAS_SERR_ALM_EN);
	langMap.insert("strRF_P_OH_ALM_EN",langEnum::strRF_P_OH_ALM_EN);
	langMap.insert("strRF_P_OL_ALM_EN",langEnum::strRF_P_OL_ALM_EN);
	langMap.insert("strRF_TP_OH_ALM_EN",langEnum::strRF_TP_OH_ALM_EN);
	langMap.insert("strRF_TI_OH_ALM_EN",langEnum::strRF_TI_OH_ALM_EN);
	langMap.insert("strRF_TI_OL_ALM_EN",langEnum::strRF_TI_OL_ALM_EN);
	langMap.insert("strRF_HI_OH_ALM_EN",langEnum::strRF_HI_OH_ALM_EN);
	langMap.insert("strRF_HI_OL_ALM_EN",langEnum::strRF_HI_OL_ALM_EN);
	langMap.insert("strRF_TO_OH_ALM_EN",langEnum::strRF_TO_OH_ALM_EN);
	langMap.insert("strRF_TO_OL_ALM_EN",langEnum::strRF_TO_OL_ALM_EN);
	langMap.insert("strRF_HEAT_ALM_EN",langEnum::strRF_HEAT_ALM_EN);
	langMap.insert("strRF_SMOK_ALM_EN",langEnum::strRF_SMOK_ALM_EN);
	langMap.insert("strRF_FSD_ALM_EN",langEnum::strRF_FSD_ALM_EN);
	langMap.insert("strRF_FLT_ALM_EN",langEnum::strRF_FLT_ALM_EN);
	langMap.insert("strRF_HUMI_PRT_ALM_EN",langEnum::strRF_HUMI_PRT_ALM_EN);
	langMap.insert("strRF_SYSDW_ALM_EN",langEnum::strRF_SYSDW_ALM_EN);
	langMap.insert("strDIOSet",langEnum::strDIOSet);
	langMap.insert("strRF_DO1_FUNC",langEnum::strRF_DO1_FUNC);
	langMap.insert("strRF_DO2_FUNC",langEnum::strRF_DO2_FUNC);
	langMap.insert("strRF_DO3_FUNC",langEnum::strRF_DO3_FUNC);
	langMap.insert("strRF_DO4_FUNC",langEnum::strRF_DO4_FUNC);
	langMap.insert("strRF_DO5_FUNC",langEnum::strRF_DO5_FUNC);
	langMap.insert("strRF_DO6_FUNC",langEnum::strRF_DO6_FUNC);
	langMap.insert("strRF_DO7_FUNC",langEnum::strRF_DO7_FUNC);
	langMap.insert("strRF_DO8_FUNC",langEnum::strRF_DO8_FUNC);
	langMap.insert("strRF_DO9_FUNC",langEnum::strRF_DO9_FUNC);
	langMap.insert("strRF_DO10_FUNC",langEnum::strRF_DO10_FUNC);
	langMap.insert("strRF_DO11_FUNC",langEnum::strRF_DO11_FUNC);
	langMap.insert("strRF_DO12_FUNC",langEnum::strRF_DO12_FUNC);
	langMap.insert("strRF_DO13_FUNC",langEnum::strRF_DO13_FUNC);
	langMap.insert("strRF_DO14_FUNC",langEnum::strRF_DO14_FUNC);
	langMap.insert("strRF_DO15_FUNC",langEnum::strRF_DO15_FUNC);
	langMap.insert("strRF_DO16_FUNC",langEnum::strRF_DO16_FUNC);
	langMap.insert("strRF_DO17_FUNC",langEnum::strRF_DO17_FUNC);
	langMap.insert("strRF_DO18_FUNC",langEnum::strRF_DO18_FUNC);
	langMap.insert("strRF_DI1_FUNC",langEnum::strRF_DI1_FUNC);
	langMap.insert("strRF_DI2_FUNC",langEnum::strRF_DI2_FUNC);
	langMap.insert("strRF_DI3_FUNC",langEnum::strRF_DI3_FUNC);
	langMap.insert("strRF_DI4_FUNC",langEnum::strRF_DI4_FUNC);
	langMap.insert("strRF_DI5_FUNC",langEnum::strRF_DI5_FUNC);
	langMap.insert("strRF_DI6_FUNC",langEnum::strRF_DI6_FUNC);
	langMap.insert("strRF_DI7_FUNC",langEnum::strRF_DI7_FUNC);
	langMap.insert("strRF_DI8_FUNC",langEnum::strRF_DI8_FUNC);
	langMap.insert("strRF_DI9_FUNC",langEnum::strRF_DI9_FUNC);
	langMap.insert("strRF_DI10_FUNC",langEnum::strRF_DI10_FUNC);
	langMap.insert("strRF_DI11_FUNC",langEnum::strRF_DI11_FUNC);
	langMap.insert("strRF_DI12_FUNC",langEnum::strRF_DI12_FUNC);
	langMap.insert("strRF_DI13_FUNC",langEnum::strRF_DI13_FUNC);
	langMap.insert("strRF_DI14_FUNC",langEnum::strRF_DI14_FUNC);
	langMap.insert("strRF_DI15_FUNC",langEnum::strRF_DI15_FUNC);
	langMap.insert("strRF_DI16_FUNC",langEnum::strRF_DI16_FUNC);
	langMap.insert("strRF_DI17_FUNC",langEnum::strRF_DI17_FUNC);
	langMap.insert("strRF_DI18_FUNC",langEnum::strRF_DI18_FUNC);
	langMap.insert("strRF_DI19_FUNC",langEnum::strRF_DI19_FUNC);
	langMap.insert("strRF_DI20_FUNC",langEnum::strRF_DI20_FUNC);
	langMap.insert("strHumidif",langEnum::strHumidif);
	langMap.insert("strEH",langEnum::strEH);
}
